<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Network on Kxn's eXercise Notes</title><link>https://blog.kangkang.org/categories/Network/</link><description>Recent content in Network on Kxn's eXercise Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 31 Oct 2018 11:25:20 +0000</lastBuildDate><atom:link href="https://blog.kangkang.org/categories/Network/index.xml" rel="self" type="application/rss+xml"/><item><title>斐讯N1刷CentOS7最简操作</title><link>https://blog.kangkang.org/post/367.html</link><pubDate>Wed, 31 Oct 2018 11:25:20 +0000</pubDate><guid>https://blog.kangkang.org/post/367.html</guid><description>准备工具 N1 一台 USB 双公口线一条 4G 以上 U 盘一个，越老越好，新 U 盘可能有兼容性问题 可以运行安卓 adb 工具的电脑一台，win/mac/linux 都行 降级 bootloader 首先下载文件 微云：https://share.weiyun.com/5vAkZ7p 密码：nzwy53 将 N1 接上网线，HDMI 线接显示器，离 HDMI</description></item><item><title>北京联通宽带时不时出现苹果AppStore无法连接的解决方法</title><link>https://blog.kangkang.org/post/361.html</link><pubDate>Thu, 19 Jul 2018 16:12:24 +0000</pubDate><guid>https://blog.kangkang.org/post/361.html</guid><description>这个问题其实好多年了，一旦出现以后短时间以内就很难解决，除非断开家里 WiFi 改用 4G. 今天正好又出现了，借着 ROS 可以远程抓包的功能顺手调试了一下，发现这个问题原来是网宿弱智导致的。 AppStore 在启动和工作中会连接很多域名，其中下面这些（在 iOS 12 beta4 上测试，不保证其他版本） client-api.itunes.apple.com init-p01st.push.apple.com play.itunes.apple.com apps.mzstatic.com api-edge.apps.apple.com init.itunes.apple.com bag.itunes.apple.com search.itunes.apple.com 用国内的 DNS 解析会统</description></item><item><title>对 firewalld 终于失去信心了</title><link>https://blog.kangkang.org/post/334.html</link><pubDate>Wed, 30 Dec 2015 06:39:12 +0000</pubDate><guid>https://blog.kangkang.org/post/334.html</guid><description>各种坑，比如 iptables 命令执行一旦出错，后面的不会执行，如果内核少个模块，就会导致防火墙完全封死外面进不去的状态。在 openvz 主机上面简直是灾难。 从其他 fw 框架里面随便挑了一个 shorewall 把他替换掉，一下就清净了。</description></item><item><title>数据安全，从异地备份开始</title><link>https://blog.kangkang.org/post/215.html</link><pubDate>Sun, 02 Nov 2008 07:38:22 +0000</pubDate><guid>https://blog.kangkang.org/post/215.html</guid><description>话说我的 blog 也 down 了有数次了，每次 down 掉以后都好久起不来，其中很大程度上是 blog 的数据没有及时备份出来，用以前的备份开的话，中间的就都丢了，回头合并又是个麻烦事情。 最近有点时间，在北京机器上的 MySQL 配置了一下，让他作为从库从唐山机器的 MySQL 同步下来 blog 的数据，只要网络不是太烂，基本可以做到实时备份了</description></item><item><title>郁闷，折腾了这么久，才发现居然是双工的问题</title><link>https://blog.kangkang.org/post/212.html</link><pubDate>Sun, 12 Oct 2008 07:14:53 +0000</pubDate><guid>https://blog.kangkang.org/post/212.html</guid><description>这个机器最早刚拿到机房的时候，发现不知道为啥，启动时候总是协商成 10M 半双工，但是交换机和网卡显然都是 100M 的，于是只好在 rc.local 里面加了一条 mii-tool -F 100baseTx-FD eth0 ， 这么一直用了一年多也没有太大问题。后来因为一些原因，这个机器 down 了又有一年多，再起来以后就总觉得这个机器网络慢，在 shell 上面执行比较大输出的操作，都</description></item><item><title>在 Fedora 9 下面配置 ISATAP IPV6 tunnel</title><link>https://blog.kangkang.org/post/196.html</link><pubDate>Fri, 30 May 2008 08:49:45 +0000</pubDate><guid>https://blog.kangkang.org/post/196.html</guid><description>Fedora 9 终于换成了 2.6.25 kernel，2.6.25 支持 ISATAP 方式的 ipv6 tunnel 接入。于是把自己的机器简单配置了一下支持 IPV6 1: 保证 kernel 支持 ipv6 2: 编辑 /etc/sysconfig/network ，增加下面这行 IPV6_DEFAULTGW=your ipv6 gateway 3: 编辑 /etc/sysconfig/network-scripts/ifcfg-sit1, 内容如下 DEVICE=sit1 ONBOOT=yes IPV6INIT=yes IPV6TUNNELIPV4=your isatap tunnel IP IPV6TUNNELIPV4LOCAL=your local ipv4 ip IPV6ADDR=your ipv6 address 4: ifup sit1 UPDATE: 我还没有试验过这个在 F9 上重启是否有效，但在 centos 5.1 上面不好用，似乎 ifup-sit 不会创建对应的 sit1 设备，</description></item><item><title>启用 reCAPTCHA</title><link>https://blog.kangkang.org/post/169.html</link><pubDate>Sat, 26 May 2007 06:36:53 +0000</pubDate><guid>https://blog.kangkang.org/post/169.html</guid><description>CAPTCHA 这名字听起来很诡异，其实中文里面我们管他叫图片认证码，是用来防机器人注册发帖的。现在互联网上面机器人遍地都是，没有个认证码挡着，用不了多久就会被灌满垃圾广告。这东西最早似乎是卡内基梅隆大学的人研制的，然后把技术提供给了 Yahoo 之类的地方。如今 CAPTCHA 可谓是遍地开花，各种开源的商业的实现一把</description></item><item><title>终于又搞定了 MTU 问题.</title><link>https://blog.kangkang.org/post/168.html</link><pubDate>Mon, 21 May 2007 10:11:24 +0000</pubDate><guid>https://blog.kangkang.org/post/168.html</guid><description>为什么要说又呢? 以前似乎搞定过一次,但是这次不知道链路中间过了什么, MTU 又小了, 导致我 1400 的 MTU 又失败了, 刚才听了一阵子包终于发现是这个问题,于是把 MTU 缩小到 500. 发现终于可以用了&amp;hellip;</description></item><item><title>ADSL IP 段变了</title><link>https://blog.kangkang.org/post/161.html</link><pubDate>Wed, 18 Apr 2007 03:42:47 +0000</pubDate><guid>https://blog.kangkang.org/post/161.html</guid><description>似乎是换到新的 BRAS 上面了, 明显网速快了很多很多，北京网通总算干了一件好事。 带来的问题是新的 IP 段(125.33.3.0/24)目前还不是教育网免费 IP 段，完全连不上了。</description></item><item><title>Bot 凶猛</title><link>https://blog.kangkang.org/post/152.html</link><pubDate>Sat, 24 Mar 2007 05:39:52 +0000</pubDate><guid>https://blog.kangkang.org/post/152.html</guid><description>今天无聊看了一下 httpd 的 log, 发现这个地方真是 Bot 的乐园，一眼看去无数行 log 里面一个正常访问的用户都没有，有名的无名的 Bot 哗啦哗啦抓得不亦乐乎。还好我的带宽不要钱，要是虚拟主机用户岂不是要哭死。 简单统计了一下 User-Agent： cut -d &amp;quot; &amp;quot; -f 12- access.log | sort | uniq -c | sort -k 1 -n -r &amp;gt; /tmp/uastat.log 结果见附件。 肉眼观察了一</description></item><item><title>提问:如何只用一个root bash重起Linux系统</title><link>https://blog.kangkang.org/post/144.html</link><pubDate>Sat, 02 Dec 2006 17:54:35 +0000</pubDate><guid>https://blog.kangkang.org/post/144.html</guid><description>假设你远程连着一个 Linux 系统 shell, 这个 shell 是 root shell, 但是任何其它外部命令都没得用. 如何将这台 Linux 系统重起呢？这个 Linux 是默认安装的 fedora core, 没有自己重新编译 kernel 之类事情。 这个问题的背景是这样的，最近远程升级一台 FC2 -&amp;gt; FC6, 因为 FC3 有 udev 问题，FC4 有 non-ext3 root 问题，所以决定不重起一路冲上 FC6，结果忘记了 FC5 的 glibc 2.4 强迫需要新</description></item><item><title>FC6 升级成功</title><link>https://blog.kangkang.org/post/140.html</link><pubDate>Sun, 29 Oct 2006 18:43:18 +0000</pubDate><guid>https://blog.kangkang.org/post/140.html</guid><description>真是不容易，头一次碰上版本升级可以正常上去的。以前每次都要踩到 FC 的 bug。 附: FC 各版本升级 bug FC1 -&amp;gt; FC2 : 基本没有问题，除了 FC2 认键盘经常会出问题，但是这个对远程升级没有影响。 FC2 -&amp;gt; FC3 : FC3 使用 udev, 在 obsolete 原来的 dev 这个包的时候，会把 /dev 删光光！如果你是自己编译 kernel 没有使用 initrd 的话，就会死的很抽象。 FC3 -&amp;gt; FC4</description></item><item><title>修改Windows TCP参数来对付北京网通垃圾的ADSL</title><link>https://blog.kangkang.org/post/129.html</link><pubDate>Sun, 28 May 2006 14:14:01 +0000</pubDate><guid>https://blog.kangkang.org/post/129.html</guid><description>最近北京网通的 ADSL 实在快不能忍了，到晚上就丢包率过 10% ，上个 bbs 卡得不行，于是 google 了一通，修改了几个 Windows TCP 的参数，以浪费带宽为代价提高响应速度（比起下载和上 bbs 来，我还是更重视 bbs 速度，我想网游一族应该也是这样）。效果似乎还可以，不知道是心理作用还是怎么回事。不过确实见不到在 bbs 上面一卡半天的现</description></item><item><title>Fedora Core 5 引发的血案</title><link>https://blog.kangkang.org/post/107.html</link><pubDate>Sun, 23 Apr 2006 13:55:54 +0000</pubDate><guid>https://blog.kangkang.org/post/107.html</guid><description>最近网络上面到处都是血案，我这里也出了一桩。 我的机器一直用的是 FC 系列，自己已经习惯 Redhat 系列发行版了，也懒得换。每次新系统出来的时候，我都顺手 yum 升级上去。感觉不比 debian 的 apt 差太多。FC5 出来以后我又照常 yum 上去了，没想到这将会是一系列恶梦的开端。 4 月某个时间，学校里面停了一次电，来电以后我</description></item><item><title>升级到 FC5, 邮件系统挂了</title><link>https://blog.kangkang.org/post/87.html</link><pubDate>Sun, 26 Mar 2006 15:31:29 +0000</pubDate><guid>https://blog.kangkang.org/post/87.html</guid><description>openldap 升级到了 2.3.x ，然后似乎 bdb 出了什么问题，起不起来了。。。 于是 kangkang.net 的邮件都不能收了, Life is hard!</description></item><item><title>总结一下lighttpd的优缺点</title><link>https://blog.kangkang.org/post/73.html</link><pubDate>Tue, 14 Feb 2006 15:37:18 +0000</pubDate><guid>https://blog.kangkang.org/post/73.html</guid><description>今天实在没得可写，不如炒个冷饭，以前发在论坛的帖子 优点 发信人: kxn (一整夜), 信区: NewSoftClub 标 题: Re: eaccelerator 可以用在 apache+php+fastcgi 中吗? 发信站: 水木社区 (Sat Feb 11 11:19:26 2006), 站内 内存占用非常之少，可以节省下来大量内存给应用和磁盘缓存。此外单进程减少很多不必 要的 context switch , 在慢网并发连接时候非常明显了。 当然最明显的好处是比其</description></item><item><title>将 lighttpd 进行到底, mod_proxy 对一些请求不返回应答 body 的解决方法.</title><link>https://blog.kangkang.org/post/70.html</link><pubDate>Sun, 12 Feb 2006 13:31:01 +0000</pubDate><guid>https://blog.kangkang.org/post/70.html</guid><description>1.4.10 这么快就出来了,号称里面修正了 mod_proxy 处理 30x 请求时候返回 body 不正常的问题, 不过升级了一下发现还是有问题,仔细看了一下,原来本身就是只修正了 301 这一种请求, 而某系统会发送 305 带 body 的结果,于是就不好用了. 自己简单改了一下让他可以支持该系统. 不过 lighttpd 这么干不是个事情啊. 今天搞了 305, 明天说不定还会有不</description></item><item><title>LVS 直接路由方式简单配置，以及响应时间抖动情况</title><link>https://blog.kangkang.org/post/69.html</link><pubDate>Sun, 12 Feb 2006 13:12:42 +0000</pubDate><guid>https://blog.kangkang.org/post/69.html</guid><description>最近发现 F5 这样的负载均衡设备可能请求时间会出现抖动现象，最长的请求经常可以达到好几秒。考虑到 F5 会对所有数据进行 NAT ，有可能处理能力不足，打算研究一下 LVS 会不会有类似现象。 小知识：什么是 LVS? LVS 是 Linux Virtual Server 的缩写，是章文嵩主持开发的基于 Linux 的类似 F5 这样的连接管理软件，它将接收到的数据包进行部分修</description></item><item><title>lighttpd 升级了，顺便跟一下</title><link>https://blog.kangkang.org/post/67.html</link><pubDate>Fri, 27 Jan 2006 15:02:03 +0000</pubDate><guid>https://blog.kangkang.org/post/67.html</guid><description>最新的是 1.4.9 比较好的一个事情是 1.4.8 带来的 mod_dirlisting 的中文乱码问题又修正了，省得我打 patch 了，赞一个。 另外一个比较不错的功能是 mod_evasive, 可以限制同一 IP 的连接数，当然本站暂时不需要它。hehe</description></item><item><title>被Squid的统计数据骗了。。</title><link>https://blog.kangkang.org/post/65.html</link><pubDate>Tue, 17 Jan 2006 14:25:38 +0000</pubDate><guid>https://blog.kangkang.org/post/65.html</guid><description>这年头真是连胡萝卜都不可以相信。 前一段时间用了很多很多的时间和精力奋斗 squid, 当时无论怎么调整参数, Linux 下面的 squid 性能就是比不上 FreeBSD 系统的。同样的硬件配置，DNS Round Robin 轮转均衡，Linux 的 squid 无论 hit rate 还是 traffic 都比 FreeBSD 的低一些，随着流量增加，差别还越来越明显。今天差距居然达到 33% 了，Linux 报告 traffic 在</description></item><item><title>Fight against cacti, net-snmp and squid</title><link>https://blog.kangkang.org/post/64.html</link><pubDate>Sun, 15 Jan 2006 12:00:38 +0000</pubDate><guid>https://blog.kangkang.org/post/64.html</guid><description>一天多来都在折腾这三个东西，作点笔记好了。 首先简单介绍一下: cacti 是一个用 rrdtool 来画图的网络监控系统, 通常一说到网络管理, 大家首先想到的经常是 mrtg, 但是 mrtg 画的图简单且难看, rrdtool 虽然画图本领一流, 画出来的图也漂亮, 但是他也就是一个画图工具, 不像 mrtg 那样本身还集成了数据收集功能. cacti 则是集成了各种数据</description></item><item><title>BaiduSpider好像学油了</title><link>https://blog.kangkang.org/post/61.html</link><pubDate>Fri, 13 Jan 2006 11:15:22 +0000</pubDate><guid>https://blog.kangkang.org/post/61.html</guid><description>看了一下 log ， 发现最近 baiduspider 都是抓了 feed 以后就走，如果有更新了，才见到来抓页面，难道是他已经可以根据 RSS Feed 来判断站点是不是更新了吗？admire</description></item><item><title>Squid 高级优化指南/Squid Advanced Tuning Guide(续2)</title><link>https://blog.kangkang.org/post/59.html</link><pubDate>Thu, 12 Jan 2006 14:54:07 +0000</pubDate><guid>https://blog.kangkang.org/post/59.html</guid><description>Squid 高级优化指南 (续 2) by kang[at]kangkang[dot]org , 转载请保留 (续上节) C 根据不同的需求，调整参数优化缓存 完成 A 和 B 两步优化以后， squid 的命中率经常可以达到 9x%, 可以说我们已经给 squid 创造了非常优秀的外部环境，下面我们就要从 squid 本身入手，通过调整它的缓存参数和缓存策略，甚至系统的参数，来让 squid 发挥出更好的性能。 在 B 步骤中</description></item><item><title>Squid 高级优化指南/Squid Advanced Tuning Guide(续1)</title><link>https://blog.kangkang.org/post/58.html</link><pubDate>Wed, 11 Jan 2006 16:18:23 +0000</pubDate><guid>https://blog.kangkang.org/post/58.html</guid><description>Squid 高级优化指南 (续 1) by kang[at]kangkang[dot]org , 转载请保留 (续上节) B 根据 squid 访问的模式，进行业务拆分 进行了 Expires Header 的处理以后，squid 就真正可以起到加速的作用了，你可能也能感觉到，网站的访问速度明显加快。但是不要满足于这点成绩，查看 squid 的 snmp 统计图，通常 hit ratio 并不会太高，有 50% 就了不起了。这就是我们需要进一步优</description></item><item><title>Squid 高级优化指南/Squid Advanced Tuning Guide</title><link>https://blog.kangkang.org/post/57.html</link><pubDate>Tue, 10 Jan 2006 04:04:25 +0000</pubDate><guid>https://blog.kangkang.org/post/57.html</guid><description>Squid 高级优化指南 by kang[at]kangkang[dot]org , 转载请保留 类似的题目网上已经有很多了，为啥我还要写这么一篇？其实是前段时间接手了一个 squid 优化的事情，在网上搜索了一下，发现很多 squid 优化只限于在 squid 参数和系统参数上面的调整。但是这个实在只是细枝末节的事情，只要不是太弱智的配置导致无法缓存，squid 的性能不会有太大差</description></item><item><title>系统时间不准。。</title><link>https://blog.kangkang.org/post/55.html</link><pubDate>Thu, 05 Jan 2006 10:08:44 +0000</pubDate><guid>https://blog.kangkang.org/post/55.html</guid><description>一大组 squid 里面有两台相同配置的 p3 机器, 一台是 linux ，一台是 freebsd, 用 dns round-robin 轮转均衡，squid 的配置完全相同，发现 linux 那台 TF 死活上不了 3MB, 同时很奇怪的 hitrate 也低，同时 freebsd 那台的 hitrate 就可以到 97%, TF 最大接近 4MB，于是想尽办法优化 linux 那台，升级到 as4, 自己编译 kernel, icc squid ，reiserfs , heap LFUDA， 开大 memcache 大小同时改系</description></item><item><title>用yum或者apt-get等包管理工具在线升级 rpm based Linux系统</title><link>https://blog.kangkang.org/post/39.html</link><pubDate>Tue, 13 Dec 2005 16:43:24 +0000</pubDate><guid>https://blog.kangkang.org/post/39.html</guid><description>爱好 debian 的 Linuxer 通常很看不上基于 rpm 的系统，和 debian 的 apt 系统比起来，RedHat 的 up2date 简直就是一个鸡肋，升级要账号不说，网络稍微有点毛病，就彻底卡死了。还不能建立个人镜像，每次都得从米国 redhat 的老家下，非常之慢。最重要的，up2date 并不支持 apt-get dist-upgrade 这样跨越 dist 的升级，装了 RH 7.3 这样的老系统，就只能一条</description></item><item><title>用 icc ipo 编译 squid</title><link>https://blog.kangkang.org/post/38.html</link><pubDate>Tue, 13 Dec 2005 09:58:06 +0000</pubDate><guid>https://blog.kangkang.org/post/38.html</guid><description>其实就是要把 Makefile 里面的 ar 换成 xiar，这不是一个很难的事情，但是 squid 不知道用的什么版本的 autotools, 如果重新生成 Makefile 的话，会有很多乱七八糟的错误，而且还编译不过，因此最简单的办法是直接在 configure 之后，替换所有 ar 为 xiar 就好了 configure 参数我用的这个 CC=icc CXX=icc CFLAGS=&amp;quot;-O3 -ipo -axKWP -funroll-loops -unroll256 -mcpu=pentium4 -mtune=pentium4 -march=pentium4 -fomit-frame-pointer -static-libcxa -cxxlib-icc -i-static -fno-exceptions -no-prec-div&amp;quot; ./configure &amp;ndash;enable-epoll &amp;ndash;prefix=/var/test/squid &amp;ndash;enable-storeio=&amp;ldquo;aufs,ufs,diskd&amp;rdquo; &amp;ndash;with-aufs-threads=3 &amp;ndash;with-pthreads &amp;ndash;enable-removal-policies=heap,lru &amp;ndash;disable-delay-pools &amp;ndash;enable-underscores &amp;ndash;disable-ident-lookups &amp;ndash;enable-time-hack &amp;ndash;enable-cache-digests &amp;ndash;disable-forw-via-db 然后简单</description></item><item><title>升级到 php 5</title><link>https://blog.kangkang.org/post/34.html</link><pubDate>Mon, 12 Dec 2005 13:56:09 +0000</pubDate><guid>https://blog.kangkang.org/post/34.html</guid><description>看起来好像没有任何不同，本来也是。我本来就没有用什么奇怪的配置么。只有 mysql 需要单独 &amp;ndash;with 一下 Update: 测试一下</description></item><item><title>用lighttpd的rewrite来做wordpress的permalink</title><link>https://blog.kangkang.org/post/15.html</link><pubDate>Mon, 05 Dec 2005 07:20:13 +0000</pubDate><guid>https://blog.kangkang.org/post/15.html</guid><description>WordPress 的 permallink 需要 apache 的支持，wordpress 会自动生成一个 .htaccess 文件来给 apache 加 rewrite 规则，但是 lighttpd 的 rewrite 规则格式和 apache 不一样，而且好像不支持 .htaccess. 需要手动转换一下。 WordPress 生成的 .htaccess 规则大概是 RewriteBase /wordpress/ RewriteRule ^.*$ index.php [S=47] RewriteRule ^feed/(feed|rdf|rss|rss2|atom)/?$ /wordpress/index.php?&amp;amp;feed=$1 [QSA,L] RewriteRule ^(feed|rdf|rss|rss2|atom)/?$ /wordpress/index.php?&amp;amp;feed=$1 [QSA,L] 这样的 lighttpd 需要的 rewrite 规则大概是 url.rewrite = (&amp;quot;^/wordpress/feed/(feed|rdf|rss|rss2|atom)/?$&amp;quot; =&amp;gt; &amp;ldquo;/wordpress/index.php?&amp;amp;feed=$1&amp;rdquo;, &amp;ldquo;^/wordpress/(feed|rdf|rss|rss2|atom)/?$&amp;rdquo; =&amp;gt; &amp;ldquo;/wordpress/index.php?&amp;amp;feed=$1&amp;rdquo;, &amp;ldquo;^/wordpress/page/?([0-9]{1,})/?$&amp;rdquo; =&amp;gt; &amp;ldquo;/wordpress/index.php?&amp;amp;paged=$1&amp;rdquo; ) 这样的 内容和 Apache 的基本类似，就是把所有规则转换</description></item><item><title>This site is now running lighttpd + php(fcgi) + eaccelrator</title><link>https://blog.kangkang.org/post/14.html</link><pubDate>Sat, 03 Dec 2005 07:13:06 +0000</pubDate><guid>https://blog.kangkang.org/post/14.html</guid><description>scaner 推荐的东西通常都是不错的，这次的 lighttpd 也不例外。 我的站点虽然在跑 php , 但是大多数时候，还是用来下载的比较多，这时候 php 也没啥用处，多占不少内存，lighttpd + phpfcgi 的速度看评测也不慢多少. 不过这东东一启动，就跑了 5 个 php 进程出来，然后每个 php 进程又 fork 一个, 看起来很乱，要是 fcgi 方式还支持 multithread 就好</description></item><item><title>终于把机器弄起来了，FC4在用非ext3的/boot时候会有问题-_-</title><link>https://blog.kangkang.org/post/9.html</link><pubDate>Fri, 07 Oct 2005 16:55:02 +0000</pubDate><guid>https://blog.kangkang.org/post/9.html</guid><description>呃，距离上次发 blog 有一个月还多了。中间机器挂掉好长时间，一直没有时间去弄，今天总算弄好了，随便写两句。 挂掉的起因是因为在线升级了 FC3 到 FC4, 这本来是件挺美好的事儿，但是 FC4 就是不给面子，机器没有重启起来，本来以为是 openvpn 的事情，去了一看原来是 grub load kernel 的时候就死掉了。没办法，把系统拿回来重装吧。 没</description></item><item><title>离开了域控制器的机器千万不要随便离开域</title><link>https://blog.kangkang.org/post/7.html</link><pubDate>Mon, 22 Aug 2005 14:24:23 +0000</pubDate><guid>https://blog.kangkang.org/post/7.html</guid><description>今天就土鳖了一次，一个原来在域里面的机器，搬到没有域的环境下面用，虽然不能连接域，还是可以本地用，但是无法连接任何其他机器的资源，此时如果为了使用其他机器上面的资源而改设置离开域，原来的账号就再也登不进去了。只能用本地账号登陆把东西 copy 过来，呜呼。</description></item></channel></rss>